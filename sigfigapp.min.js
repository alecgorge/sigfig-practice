function SigFigApp(){function c(a){function d(a,c){var e=a.right,f=b.operators[a.op];return typeof e.right!="undefined"&&(e=d.apply(this,[a.right])),{latex:"("+this.utils.format(f.latex,a.left,e.latex)+")",answer:c?f.answer(a.left,e.answer):f.exactAnswer(a.left,e.answer),exactAnswer:f.exactAnswer(a.left,e.answer)}}var c=a.right;return typeof c=="object"?c=d.apply(this,[c,!0]):c={latex:c,answer:b.operators[a.op].answer(a.left,a.right),exactAnswer:b.operators[a.op].exactAnswer(a.left,a.right)},{latex:"$$"+this.utils.format(b.operators[a.op].latex,a.left,c.latex)+"="+c.exactAnswer.toFixed(6)+"$$",answer:c.answer}}var a=this,b={min:-10,max:10,rounding:function(){return a.utils.rand(0,3,!1)},depth:1,operators:[{name:"addition",latex:"{0}+{1}",answer:function(a,b){var c=a.toString().split("."),d=b.toString().split(".");return c.length==1||d.length==1?Math.round(a+b):(a+b).toFixed(Math.min(c[1].length,d[1].length))},exactAnswer:function(a,b){return a+b}},{name:"subtraction",latex:"{0}-{1}",answer:function(a,c){return b.operators[0].answer(a,-c)},exactAnswer:function(a,c){return b.operators[0].exactAnswer(a,-c)}},{name:"multiplication",latex:"{0}\\times{1}",answer:function(b,c){return(b*c).toPrecision(Math.min(a.utils.sigfigs(b),a.utils.sigfigs(c)))},exactAnswer:function(a,b){return a*b}},{name:"division",latex:"\\frac{{0}}{{1}}",answer:function(b,c){return(b/c).toPrecision(Math.min(a.utils.sigfigs(b),a.utils.sigfigs(c)))},exactAnswer:function(a,b){return a/b}}],storeID:"q",store:$("#q"),input:$("#a"),check:$("#check"),resp:$("#resp_box"),next:$("#next")};this.utils={sigfigs:function(a){a=(typeof a=="string"?a:parseFloat(a).toString()).split(".");var b=0,c=/^0*(\d+)/;if(a.length==2){var d=a[0].match(c);b=d?d[1].replace(/^(0*)/,"").length:0}else b=a[0].split("").reverse().join("").match(c)[1].length;return a[0]!=""&&a[0]!="0"?b+=a[1]?a[1].length:0:b+=a[1].match(c)[1].length,b},round:function(a,c){return console.log(a,c||b.rounding()),a.toFixed(c||b.rounding())},rand:function(c,d,e){return c=c===0?0:c||b.min,d=d===0?0:d||b.max,e=e!==!1,parseFloat(Math.round(Math.floor(Math.random()*(d-c+1))+c))+parseFloat(e?a.utils.round(Math.random()):0)},format:function(){var a=arguments;return a[0].replace(/{(\d+)}/g,function(b,c){return c=parseInt(c),typeof a[c+1]!="undefined"?a[c+1]:"{"+c+"}"})}},this.redrawMathJax=function(){MathJax.Hub.Queue(["Typeset",MathJax.Hub,b.storeID])},this.generateExpression=function(a,c){var d=this.utils.rand(0,b.operators.length-1,!1);return op=b.operators[d],{op:d,left:a||this.utils.rand(),right:c||this.utils.rand()}},this.getRandomQuestion=function(){var a=b.depth,d=this.generateExpression();if(a>1)for(var e=0;e<a;e++)d=this.generateExpression(!1,d);var f=c.apply(this,[d]);return{latex:f.latex,answer:f.answer}},this.currentAnswer=0,this.score=[0,0],this.displayRandomQuestion=function(){var a=this.getRandomQuestion();this.currentAnswer=parseFloat(a.answer).toString(),b.store.text(a.latex),this.redrawMathJax()},this.check=function(){var a=b.input.val().replace(new RegExp("[.]+$","g"),""),c=b.resp;a==this.currentAnswer?(this.score=[this.score[0]+1,this.score[1]+1],c.html('<div class="alert-message success"><p><strong>Well done!</strong> That is correct.</p></div>'),b.next.show()):(this.score=[this.score[0],this.score[1]+1],c.html('<div class="alert-message error"><p><strong>Not quite.</strong> That is incorrect, please try again. The correct answer is: '+this.currentAnswer+"</p></div>")),this.drawscore()},this.drawscore=function(){$("#correct").text(this.score[0]),$("#total").text(this.score[1]),$("#percent").text(Math.round(this.score[0]/this.score[1]*100)+"%")},this.next=function(){b.next.hide(),b.resp.find(".alert-message").remove(),a.displayRandomQuestion(),b.input.val("").focus()},b.next.click(function(){a.next()}),b.check.click(function(){a.check()}),b.input.keypress(function(c){var d=c.keyCode||c.which;if(d==13)return b.next.is(":visible")?a.next():a.check(),!1})}$(function(){var a=new SigFigApp;a.displayRandomQuestion(),$("#a").focus()})